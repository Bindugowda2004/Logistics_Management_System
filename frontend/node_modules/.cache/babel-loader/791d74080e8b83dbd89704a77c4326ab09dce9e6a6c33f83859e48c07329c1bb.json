{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api/auth/';\nclass AuthService {\n  login(username, password) {\n    return axios.post(API_URL + 'login', {\n      username,\n      password\n    }).then(response => {\n      if (response.data.token) {\n        localStorage.setItem('user', JSON.stringify(response.data));\n      }\n      return response.data;\n    }).catch(error => {\n      // Handle error response\n      if (error.response && error.response.data) {\n        return error.response.data;\n      }\n      return {\n        message: error.message || 'Login failed. Please try again.'\n      };\n    });\n  }\n  logout() {\n    localStorage.removeItem('user');\n  }\n  register(username, email, password, role) {\n    return axios.post(API_URL + 'register', {\n      username,\n      email,\n      password,\n      role\n    });\n  }\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n}\nexport default new AuthService();","map":{"version":3,"names":["axios","API_URL","AuthService","login","username","password","post","then","response","data","token","localStorage","setItem","JSON","stringify","catch","error","message","logout","removeItem","register","email","role","getCurrentUser","parse","getItem"],"sources":["C:/Users/supra/OneDrive/Documents/logistics/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/api/auth/';\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + 'login', {\n        username,\n        password\n      })\n      .then(response => {\n        if (response.data.token) {\n          localStorage.setItem('user', JSON.stringify(response.data));\n        }\n        return response.data;\n      })\n      .catch(error => {\n        // Handle error response\n        if (error.response && error.response.data) {\n          return error.response.data;\n        }\n        return { message: error.message || 'Login failed. Please try again.' };\n      });\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n  }\n\n  register(username, email, password, role) {\n    return axios.post(API_URL + 'register', {\n      username,\n      email,\n      password,\n      role\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n  }\n}\n\nexport default new AuthService();\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,iCAAiC;AAEjD,MAAMC,WAAW,CAAC;EAChBC,KAAKA,CAACC,QAAQ,EAAEC,QAAQ,EAAE;IACxB,OAAOL,KAAK,CACTM,IAAI,CAACL,OAAO,GAAG,OAAO,EAAE;MACvBG,QAAQ;MACRC;IACF,CAAC,CAAC,CACDE,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACC,IAAI,CAACC,KAAK,EAAE;QACvBC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC7D;MACA,OAAOD,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAI;MACd;MACA,IAAIA,KAAK,CAACR,QAAQ,IAAIQ,KAAK,CAACR,QAAQ,CAACC,IAAI,EAAE;QACzC,OAAOO,KAAK,CAACR,QAAQ,CAACC,IAAI;MAC5B;MACA,OAAO;QAAEQ,OAAO,EAAED,KAAK,CAACC,OAAO,IAAI;MAAkC,CAAC;IACxE,CAAC,CAAC;EACN;EAEAC,MAAMA,CAAA,EAAG;IACPP,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;EACjC;EAEAC,QAAQA,CAAChB,QAAQ,EAAEiB,KAAK,EAAEhB,QAAQ,EAAEiB,IAAI,EAAE;IACxC,OAAOtB,KAAK,CAACM,IAAI,CAACL,OAAO,GAAG,UAAU,EAAE;MACtCG,QAAQ;MACRiB,KAAK;MACLhB,QAAQ;MACRiB;IACF,CAAC,CAAC;EACJ;EAEAC,cAAcA,CAAA,EAAG;IACf,OAAOV,IAAI,CAACW,KAAK,CAACb,YAAY,CAACc,OAAO,CAAC,MAAM,CAAC,CAAC;EACjD;AACF;AAEA,eAAe,IAAIvB,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}